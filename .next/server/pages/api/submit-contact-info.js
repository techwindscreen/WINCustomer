"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/submit-contact-info";
exports.ids = ["pages/api/submit-contact-info"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "klaviyo-api":
/*!******************************!*\
  !*** external "klaviyo-api" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("klaviyo-api");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubmit-contact-info&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsubmit-contact-info.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubmit-contact-info&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsubmit-contact-info.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_submit_contact_info_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/submit-contact-info.ts */ \"(api)/./pages/api/submit-contact-info.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_submit_contact_info_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_submit_contact_info_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/submit-contact-info\",\n        pathname: \"/api/submit-contact-info\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_submit_contact_info_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnN1Ym1pdC1jb250YWN0LWluZm8mcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnN1Ym1pdC1jb250YWN0LWluZm8udHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDK0Q7QUFDL0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDhEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw4REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zdWJtaXQtY29udGFjdC1pbmZvLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zdWJtaXQtY29udGFjdC1pbmZvXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc3VibWl0LWNvbnRhY3QtaW5mb1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubmit-contact-info&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsubmit-contact-info.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/klaviyo.ts":
/*!************************!*\
  !*** ./lib/klaviyo.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KlaviyoService: () => (/* binding */ KlaviyoService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var klaviyo_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! klaviyo-api */ \"klaviyo-api\");\n/* harmony import */ var klaviyo_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(klaviyo_api__WEBPACK_IMPORTED_MODULE_0__);\n\n// Initialize Klaviyo with your private API key\nconst session = new klaviyo_api__WEBPACK_IMPORTED_MODULE_0__.ApiKeySession(process.env.KLAVIYO_PRIVATE_API_KEY || '');\nconst eventsApi = new klaviyo_api__WEBPACK_IMPORTED_MODULE_0__.EventsApi(session);\nconst profilesApi = new klaviyo_api__WEBPACK_IMPORTED_MODULE_0__.ProfilesApi(session);\nclass KlaviyoService {\n    static{\n        this.API_BASE = 'https://a.klaviyo.com/api';\n    }\n    static{\n        this.PRIVATE_KEY = process.env.KLAVIYO_PRIVATE_API_KEY;\n    }\n    // Track when a user starts a quote (optional tracking)\n    static async trackQuoteStarted(data) {\n        try {\n            console.log('📊 Tracking quote started for:', data.quoteId);\n            // This is optional tracking - if it fails, don't break the flow\n            const payload = {\n                data: {\n                    type: 'event',\n                    attributes: {\n                        properties: {\n                            vehicle_registration: data.vehicleReg,\n                            quote_id: data.quoteId,\n                            timestamp: data.timestamp,\n                            user_agent: data.userAgent,\n                            ip_address: data.ipAddress,\n                            source: 'windscreen-compare-website',\n                            event_type: 'quote_started'\n                        },\n                        metric: {\n                            data: {\n                                type: 'metric',\n                                attributes: {\n                                    name: 'Quote Started'\n                                }\n                            }\n                        },\n                        profile: {\n                            data: {\n                                type: 'profile',\n                                attributes: {\n                                    email: data.userEmail || `quote-${data.quoteId}@temp.local`,\n                                    properties: {\n                                        phone_number: data.userPhone || '',\n                                        latest_quote_id: data.quoteId,\n                                        latest_vehicle_reg: data.vehicleReg\n                                    }\n                                }\n                            }\n                        },\n                        time: new Date().toISOString()\n                    }\n                }\n            };\n            await KlaviyoService.makeAPICall('/events/', payload);\n            console.log('✅ Quote started tracking successful');\n        } catch (error) {\n            console.warn('⚠️ Quote started tracking failed (non-critical):', error);\n        // Don't throw error - this is optional tracking\n        }\n    }\n    // Track when a user completes the quote (submits contact info)\n    // This only sends the admin notification - no customer tracking\n    static async trackQuoteCompleted(data) {\n        try {\n            console.log('📧 Sending admin notification for quote completed');\n            // Only send admin notification - no customer tracking metrics\n            await KlaviyoService.sendAdminNotification({\n                vehicle_registration: data.vehicleReg,\n                quote_id: data.quoteId,\n                user_name: data.userName,\n                user_email: data.userEmail,\n                user_phone: data.userPhone,\n                user_location: data.userLocation || 'Not provided',\n                quote_price: data.quotePrice,\n                glass_type: data.glassType,\n                selected_windows: data.selectedWindows.join(', '),\n                timestamp: data.timestamp\n            });\n            console.log('✅ Klaviyo: Admin notification sent');\n        } catch (error) {\n            console.error('❌ Klaviyo: Failed to send admin notification:', error);\n        }\n    }\n    // Send admin notification email via Klaviyo\n    static async sendAdminNotification(data) {\n        try {\n            const adminEmail = process.env.ADMIN_EMAIL || 'admin@windscreencompare.com';\n            // Generate unique event ID to prevent email chaining for admin notifications\n            const uniqueEventId = `admin_notification_${data.quote_id || data.quoteId}_${Date.now()}`;\n            const payload = {\n                data: {\n                    type: 'event',\n                    attributes: {\n                        properties: {\n                            // Main event data\n                            vehicle_registration: data.vehicle_registration || data.vehicleReg,\n                            quote_id: data.quote_id || data.quoteId,\n                            timestamp: data.timestamp,\n                            user_email: data.user_email || 'Not provided',\n                            user_phone: data.user_phone || 'Not provided',\n                            user_location: data.user_location || 'Not provided',\n                            source: 'windscreen-compare-website',\n                            // Admin notification specific properties\n                            notification_type: 'admin_alert',\n                            priority: 'high',\n                            alert_type: 'quote_completed',\n                            dashboard_url: `${process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'}/admin/quotes`,\n                            formatted_timestamp: new Date().toLocaleString('en-GB', {\n                                day: '2-digit',\n                                month: '2-digit',\n                                year: 'numeric',\n                                hour: '2-digit',\n                                minute: '2-digit'\n                            }),\n                            notification_title: 'Quote Completed',\n                            action_required: 'Contact customer within 24 hours',\n                            estimated_revenue: data.quote_price,\n                            // Quote completion properties\n                            user_name: data.user_name,\n                            quote_price: data.quote_price,\n                            glass_type: data.glass_type,\n                            selected_windows: data.selected_windows,\n                            customer_priority: 'high',\n                            // Add unique identifiers to prevent email chaining\n                            unique_event_id: uniqueEventId,\n                            timestamp_ms: Date.now(),\n                            event_uuid: `admin-${data.quote_id || data.quoteId}-${Date.now()}`\n                        },\n                        metric: {\n                            data: {\n                                type: 'metric',\n                                attributes: {\n                                    name: 'Admin: Quote Completed'\n                                }\n                            }\n                        },\n                        profile: {\n                            data: {\n                                type: 'profile',\n                                attributes: {\n                                    email: adminEmail,\n                                    properties: {\n                                        role: 'admin'\n                                    }\n                                }\n                            }\n                        },\n                        time: new Date().toISOString(),\n                        // Add unique external ID to prevent event deduplication\n                        unique_id: uniqueEventId\n                    }\n                }\n            };\n            await KlaviyoService.makeAPICall('/events/', payload);\n            console.log('✅ Klaviyo: Admin notification sent');\n        } catch (error) {\n            console.error('❌ Klaviyo: Failed to send admin notification:', error);\n        }\n    }\n    // Send payment receipt email to customer\n    static async sendPaymentReceipt(data) {\n        try {\n            console.log('📧 Sending payment receipt email via Klaviyo');\n            // Generate unique event ID to prevent email chaining\n            const uniqueEventId = `payment_receipt_${data.quote_id}_${data.payment_intent_id}_${Date.now()}`;\n            const payload = {\n                data: {\n                    type: 'event',\n                    attributes: {\n                        properties: {\n                            ...data,\n                            source: 'windscreen-compare-website',\n                            email_type: 'payment_receipt',\n                            priority: 'high',\n                            // Add unique identifiers to prevent email chaining\n                            unique_event_id: uniqueEventId,\n                            payment_intent_id: data.payment_intent_id,\n                            timestamp_ms: Date.now(),\n                            event_uuid: `receipt-${data.quote_id}-${Date.now()}`\n                        },\n                        metric: {\n                            data: {\n                                type: 'metric',\n                                attributes: {\n                                    name: 'Payment Receipt'\n                                }\n                            }\n                        },\n                        profile: {\n                            data: {\n                                type: 'profile',\n                                attributes: {\n                                    email: data.customer_email,\n                                    properties: {\n                                        first_name: data.customer_name?.split(' ')[0] || '',\n                                        last_name: data.customer_name?.split(' ').slice(1).join(' ') || '',\n                                        phone_number: data.customer_phone,\n                                        vehicle_registration: data.vehicle_registration,\n                                        latest_quote_id: data.quote_id,\n                                        latest_booking_reference: data.booking_reference\n                                    }\n                                }\n                            }\n                        },\n                        time: new Date().toISOString(),\n                        // Add unique external ID to prevent event deduplication\n                        unique_id: uniqueEventId\n                    }\n                }\n            };\n            await KlaviyoService.makeAPICall('/events/', payload);\n            console.log('✅ Klaviyo: Payment receipt email sent');\n        } catch (error) {\n            console.error('❌ Klaviyo: Failed to send payment receipt:', error);\n            throw error;\n        }\n    }\n    // Send order confirmation email with service details\n    static async sendOrderConfirmation(data) {\n        try {\n            console.log('📧 Sending order confirmation email via Klaviyo');\n            // Generate unique event ID to prevent email chaining\n            const uniqueEventId = `order_confirmation_${data.quote_id}_${data.booking_reference}_${Date.now()}`;\n            const payload = {\n                data: {\n                    type: 'event',\n                    attributes: {\n                        properties: {\n                            ...data,\n                            source: 'windscreen-compare-website',\n                            email_type: 'order_confirmation',\n                            priority: 'high',\n                            // Add unique identifiers to prevent email chaining\n                            unique_event_id: uniqueEventId,\n                            booking_reference: data.booking_reference,\n                            timestamp_ms: Date.now(),\n                            event_uuid: `order-${data.quote_id}-${Date.now()}`\n                        },\n                        metric: {\n                            data: {\n                                type: 'metric',\n                                attributes: {\n                                    name: 'Order Confirmation'\n                                }\n                            }\n                        },\n                        profile: {\n                            data: {\n                                type: 'profile',\n                                attributes: {\n                                    email: data.customer_email,\n                                    properties: {\n                                        first_name: data.customer_name?.split(' ')[0] || '',\n                                        last_name: data.customer_name?.split(' ').slice(1).join(' ') || '',\n                                        phone_number: data.customer_phone,\n                                        vehicle_registration: data.vehicle_registration,\n                                        latest_quote_id: data.quote_id,\n                                        latest_booking_reference: data.booking_reference,\n                                        appointment_date: data.appointment_date,\n                                        appointment_time: data.appointment_time\n                                    }\n                                }\n                            }\n                        },\n                        time: new Date().toISOString(),\n                        // Add unique external ID to prevent event deduplication\n                        unique_id: uniqueEventId\n                    }\n                }\n            };\n            await KlaviyoService.makeAPICall('/events/', payload);\n            console.log('✅ Klaviyo: Order confirmation email sent');\n        } catch (error) {\n            console.error('❌ Klaviyo: Failed to send order confirmation:', error);\n            throw error;\n        }\n    }\n    // Helper method to make API calls\n    static async makeAPICall(endpoint, payload) {\n        if (!KlaviyoService.PRIVATE_KEY) {\n            console.warn('⚠️ Klaviyo: Private API key not configured');\n            return;\n        }\n        console.log('📤 Making Klaviyo API call to:', endpoint);\n        console.log('📋 Payload:', JSON.stringify(payload, null, 2));\n        const response = await fetch(`${KlaviyoService.API_BASE}${endpoint}`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Klaviyo-API-Key ${KlaviyoService.PRIVATE_KEY}`,\n                'Content-Type': 'application/json',\n                'revision': '2024-10-15'\n            },\n            body: JSON.stringify(payload)\n        });\n        console.log('📡 Klaviyo response status:', response.status);\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error('❌ Klaviyo API error response:', errorText);\n            throw new Error(`Klaviyo API error: ${response.status} - ${errorText}`);\n        }\n        // Handle empty responses (common for successful events)\n        const responseText = await response.text();\n        console.log('📄 Klaviyo response text:', responseText);\n        if (!responseText || responseText.trim() === '') {\n            console.log('✅ Empty response from Klaviyo (likely successful)');\n            return {};\n        }\n        try {\n            return JSON.parse(responseText);\n        } catch (parseError) {\n            console.warn('⚠️ Failed to parse Klaviyo response as JSON:', responseText);\n            return {};\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (KlaviyoService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/klaviyo.ts\n");

/***/ }),

/***/ "(api)/./lib/supabaseClient.ts":
/*!*******************************!*\
  !*** ./lib/supabaseClient.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\nif (false) {}\nif (false) {}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://julpwjxzrlkbxdbphrdy.supabase.co\" || 0, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp1bHB3anh6cmxrYnhkYnBocmR5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc0MTQ4NDUsImV4cCI6MjA1Mjk5MDg0NX0.rynZAq6bjPlpfyTaxHYcs8FdVdTo_gy95lazi2Kt5RY\" || 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvc3VwYWJhc2VDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBRXBELElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUVELElBQUksS0FBMEMsRUFBRSxFQUUvQztBQUVNLE1BQU1PLFdBQVdQLG1FQUFZQSxDQUNsQ0MsMENBQW9DLElBQUksQ0FBRSxFQUMxQ0Esa05BQXlDLElBQUksQ0FBRSxFQUNoRCIsInNvdXJjZXMiOlsiL1VzZXJzL211aGFtbWFkYWxpL0Rlc2t0b3AvV2luZHNjcmVlbkNvbXBhcmUvd2luZHNoaWVsZF9jb21wYXJlL1dpbmRDb21wYXJlL2xpYi9zdXBhYmFzZUNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmlmICghcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ01pc3NpbmcgTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMJylcbn1cblxuaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSkge1xuICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIE5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJylcbn1cblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJycsXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIHx8ICcnXG4pICJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiY29uc29sZSIsImVycm9yIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/supabaseClient.ts\n");

/***/ }),

/***/ "(api)/./pages/api/submit-contact-info.ts":
/*!******************************************!*\
  !*** ./pages/api/submit-contact-info.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/supabaseClient */ \"(api)/./lib/supabaseClient.ts\");\n/* harmony import */ var _lib_klaviyo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/klaviyo */ \"(api)/./lib/klaviyo.ts\");\n\n\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    try {\n        const { formData, quoteId, selectedWindows, windowDamage, specifications, paymentOption, glassType, quotePrice, adasCalibration } = req.body;\n        if (!quoteId) {\n            return res.status(400).json({\n                message: 'Quote ID is required'\n            });\n        }\n        // Map payment option to standardized values\n        let standardizedPaymentOption = 'full';\n        if (paymentOption) {\n            const option = paymentOption.toLowerCase();\n            if (option.includes('deposit') || option.includes('20%')) {\n                standardizedPaymentOption = 'deposit';\n            } else if (option.includes('split') || option.includes('monthly')) {\n                standardizedPaymentOption = 'split';\n            } else if (option.includes('full') || option.includes('one-time')) {\n                standardizedPaymentOption = 'full';\n            }\n        }\n        console.log('Processing contact info submission:', {\n            quoteId,\n            paymentOption,\n            standardizedPaymentOption,\n            quotePrice,\n            glassType\n        });\n        // Check if record exists\n        const { data: existingRecord } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('MasterCustomer').select().eq('quote_id', quoteId).single();\n        let result;\n        if (existingRecord) {\n            // Update existing record\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('MasterCustomer').update({\n                full_name: formData.fullName,\n                email: formData.email,\n                mobile: formData.mobile,\n                postcode: formData.postcode,\n                location: formData.location,\n                appointment_date: formData.date,\n                time_slot: formData.timeSlot,\n                insurance_provider: formData.insuranceProvider,\n                policy_number: formData.policyNumber,\n                incident_date: formData.incidentDate,\n                policy_excess: formData.policyExcessAmount,\n                policy_expiry: formData.policyExpiryDate,\n                selected_windows: selectedWindows && selectedWindows.length > 0 ? [\n                    selectedWindows\n                ] : null,\n                window_damage: windowDamage && Object.keys(windowDamage).length > 0 ? [\n                    windowDamage\n                ] : null,\n                window_spec: specifications && specifications.length > 0 ? [\n                    specifications\n                ] : null,\n                payment_option: standardizedPaymentOption,\n                glass_type: glassType || null,\n                quote_price: quotePrice || existingRecord.quote_price,\n                adas_calibration: adasCalibration || null\n            }).eq('quote_id', quoteId).select().single();\n            if (error) throw error;\n            result = data;\n        } else {\n            // Insert new record\n            const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('MasterCustomer').insert([\n                {\n                    quote_id: quoteId,\n                    vehicle_reg: formData.vehicleReg || '',\n                    full_name: formData.fullName,\n                    email: formData.email,\n                    mobile: formData.mobile,\n                    postcode: formData.postcode,\n                    location: formData.location,\n                    appointment_date: formData.date,\n                    time_slot: formData.timeSlot,\n                    insurance_provider: formData.insuranceProvider,\n                    policy_number: formData.policyNumber,\n                    incident_date: formData.incidentDate,\n                    policy_excess: formData.policyExcessAmount,\n                    policy_expiry: formData.policyExpiryDate,\n                    selected_windows: selectedWindows && selectedWindows.length > 0 ? [\n                        selectedWindows\n                    ] : null,\n                    window_damage: windowDamage && Object.keys(windowDamage).length > 0 ? [\n                        windowDamage\n                    ] : null,\n                    window_spec: specifications && specifications.length > 0 ? [\n                        specifications\n                    ] : null,\n                    payment_option: standardizedPaymentOption,\n                    glass_type: glassType || null,\n                    quote_price: quotePrice,\n                    adas_calibration: adasCalibration || null\n                }\n            ]).select().single();\n            if (error) throw error;\n            result = data;\n        }\n        // Track quote completion in Klaviyo\n        try {\n            await _lib_klaviyo__WEBPACK_IMPORTED_MODULE_1__[\"default\"].trackQuoteCompleted({\n                vehicleReg: formData.vehicleReg || result.vehicle_reg || '',\n                userEmail: formData.email,\n                userName: formData.fullName,\n                userPhone: formData.mobile,\n                userLocation: formData.location,\n                selectedWindows: selectedWindows || [],\n                windowDamage: windowDamage || {},\n                specifications: specifications || [],\n                glassType: glassType || 'OEE',\n                quotePrice: quotePrice || result.quote_price || 0,\n                quoteId: quoteId,\n                timestamp: new Date().toISOString()\n            });\n        } catch (klaviyoError) {\n            console.error('Klaviyo tracking error:', klaviyoError);\n        // Don't fail the main request if Klaviyo fails\n        }\n        return res.status(200).json({\n            message: 'Contact information saved successfully',\n            recordId: result.id\n        });\n    } catch (error) {\n        console.error('Error saving contact info:', error);\n        return res.status(500).json({\n            message: 'Failed to save contact information',\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3VibWl0LWNvbnRhY3QtaW5mby50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDb0Q7QUFDTDtBQUVoQyxlQUFlRSxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUMzRSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN2QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDaEU7SUFFQSxJQUFJO1FBQ0EsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE9BQU8sRUFBRUMsZUFBZSxFQUFFQyxZQUFZLEVBQUVDLGNBQWMsRUFBRUMsYUFBYSxFQUFFQyxTQUFTLEVBQUVDLFVBQVUsRUFBRUMsZUFBZSxFQUFFLEdBQUdkLElBQUllLElBQUk7UUFFNUksSUFBSSxDQUFDUixTQUFTO1lBQ1YsT0FBT04sSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUF1QjtRQUNsRTtRQUVBLDRDQUE0QztRQUM1QyxJQUFJVyw0QkFBNEI7UUFDaEMsSUFBSUwsZUFBZTtZQUNmLE1BQU1NLFNBQVNOLGNBQWNPLFdBQVc7WUFDeEMsSUFBSUQsT0FBT0UsUUFBUSxDQUFDLGNBQWNGLE9BQU9FLFFBQVEsQ0FBQyxRQUFRO2dCQUN0REgsNEJBQTRCO1lBQ2hDLE9BQU8sSUFBSUMsT0FBT0UsUUFBUSxDQUFDLFlBQVlGLE9BQU9FLFFBQVEsQ0FBQyxZQUFZO2dCQUMvREgsNEJBQTRCO1lBQ2hDLE9BQU8sSUFBSUMsT0FBT0UsUUFBUSxDQUFDLFdBQVdGLE9BQU9FLFFBQVEsQ0FBQyxhQUFhO2dCQUMvREgsNEJBQTRCO1lBQ2hDO1FBQ0o7UUFFQUksUUFBUUMsR0FBRyxDQUFDLHVDQUF1QztZQUMvQ2Q7WUFDQUk7WUFDQUs7WUFDQUg7WUFDQUQ7UUFDSjtRQUVBLHlCQUF5QjtRQUN6QixNQUFNLEVBQUVVLE1BQU1DLGNBQWMsRUFBRSxHQUFHLE1BQU0xQix5REFBUUEsQ0FDMUMy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O1FBRUEsb0NBQW9DO1FBQ3BDLElBQUk7WUFDQSxNQUFNeEIsd0VBQWtDLENBQUM7Z0JBQ3JDa0UsWUFBWTFELFNBQVMwRCxVQUFVLElBQUlwQyxPQUFPbUMsV0FBVyxJQUFJO2dCQUN6REcsV0FBVzVELFNBQVMyQixLQUFLO2dCQUN6QmtDLFVBQVU3RCxTQUFTMEIsUUFBUTtnQkFDM0JvQyxXQUFXOUQsU0FBUzRCLE1BQU07Z0JBQzFCbUMsY0FBYy9ELFNBQVM4QixRQUFRO2dCQUMvQjVCLGlCQUFpQkEsbUJBQW1CLEVBQUU7Z0JBQ3RDQyxjQUFjQSxnQkFBZ0IsQ0FBQztnQkFDL0JDLGdCQUFnQkEsa0JBQWtCLEVBQUU7Z0JBQ3BDRSxXQUFXQSxhQUFhO2dCQUN4QkMsWUFBWUEsY0FBY2UsT0FBTytCLFdBQVcsSUFBSTtnQkFDaERwRCxTQUFTQTtnQkFDVCtELFdBQVcsSUFBSUMsT0FBT0MsV0FBVztZQUNyQztRQUNKLEVBQUUsT0FBT0MsY0FBYztZQUNuQnJELFFBQVFTLEtBQUssQ0FBQywyQkFBMkI0QztRQUN6QywrQ0FBK0M7UUFDbkQ7UUFFQSxPQUFPeEUsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUN4QkMsU0FBUztZQUNUcUUsVUFBVTlDLE9BQU8rQyxFQUFFO1FBQ3ZCO0lBQ0osRUFBRSxPQUFPOUMsT0FBTztRQUNaVCxRQUFRUyxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPNUIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUN4QkMsU0FBUztZQUNUd0IsT0FBT0EsaUJBQWlCK0MsUUFBUS9DLE1BQU14QixPQUFPLEdBQUc7UUFDcEQ7SUFDSjtBQUNKIiwic291cmNlcyI6WyIvVXNlcnMvbXVoYW1tYWRhbGkvRGVza3RvcC9XaW5kc2NyZWVuQ29tcGFyZS93aW5kc2hpZWxkX2NvbXBhcmUvV2luZENvbXBhcmUvcGFnZXMvYXBpL3N1Ym1pdC1jb250YWN0LWluZm8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XG5pbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4uLy4uL2xpYi9zdXBhYmFzZUNsaWVudCc7XG5pbXBvcnQgS2xhdml5b1NlcnZpY2UgZnJvbSAnLi4vLi4vbGliL2tsYXZpeW8nO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gICAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgICBjb25zdCB7IGZvcm1EYXRhLCBxdW90ZUlkLCBzZWxlY3RlZFdpbmRvd3MsIHdpbmRvd0RhbWFnZSwgc3BlY2lmaWNhdGlvbnMsIHBheW1lbnRPcHRpb24sIGdsYXNzVHlwZSwgcXVvdGVQcmljZSwgYWRhc0NhbGlicmF0aW9uIH0gPSByZXEuYm9keTtcblxuICAgICAgICBpZiAoIXF1b3RlSWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdRdW90ZSBJRCBpcyByZXF1aXJlZCcgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNYXAgcGF5bWVudCBvcHRpb24gdG8gc3RhbmRhcmRpemVkIHZhbHVlc1xuICAgICAgICBsZXQgc3RhbmRhcmRpemVkUGF5bWVudE9wdGlvbiA9ICdmdWxsJztcbiAgICAgICAgaWYgKHBheW1lbnRPcHRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IHBheW1lbnRPcHRpb24udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIGlmIChvcHRpb24uaW5jbHVkZXMoJ2RlcG9zaXQnKSB8fCBvcHRpb24uaW5jbHVkZXMoJzIwJScpKSB7XG4gICAgICAgICAgICAgICAgc3RhbmRhcmRpemVkUGF5bWVudE9wdGlvbiA9ICdkZXBvc2l0JztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9uLmluY2x1ZGVzKCdzcGxpdCcpIHx8IG9wdGlvbi5pbmNsdWRlcygnbW9udGhseScpKSB7XG4gICAgICAgICAgICAgICAgc3RhbmRhcmRpemVkUGF5bWVudE9wdGlvbiA9ICdzcGxpdCc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9wdGlvbi5pbmNsdWRlcygnZnVsbCcpIHx8IG9wdGlvbi5pbmNsdWRlcygnb25lLXRpbWUnKSkge1xuICAgICAgICAgICAgICAgIHN0YW5kYXJkaXplZFBheW1lbnRPcHRpb24gPSAnZnVsbCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlLmxvZygnUHJvY2Vzc2luZyBjb250YWN0IGluZm8gc3VibWlzc2lvbjonLCB7XG4gICAgICAgICAgICBxdW90ZUlkLFxuICAgICAgICAgICAgcGF5bWVudE9wdGlvbixcbiAgICAgICAgICAgIHN0YW5kYXJkaXplZFBheW1lbnRPcHRpb24sXG4gICAgICAgICAgICBxdW90ZVByaWNlLFxuICAgICAgICAgICAgZ2xhc3NUeXBlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENoZWNrIGlmIHJlY29yZCBleGlzdHNcbiAgICAgICAgY29uc3QgeyBkYXRhOiBleGlzdGluZ1JlY29yZCB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAgIC5mcm9tKCdNYXN0ZXJDdXN0b21lcicpXG4gICAgICAgICAgICAuc2VsZWN0KClcbiAgICAgICAgICAgIC5lcSgncXVvdGVfaWQnLCBxdW90ZUlkKVxuICAgICAgICAgICAgLnNpbmdsZSgpO1xuXG4gICAgICAgIGxldCByZXN1bHQ7XG4gICAgICAgIGlmIChleGlzdGluZ1JlY29yZCkge1xuICAgICAgICAgICAgLy8gVXBkYXRlIGV4aXN0aW5nIHJlY29yZFxuICAgICAgICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAgICAgICAuZnJvbSgnTWFzdGVyQ3VzdG9tZXInKVxuICAgICAgICAgICAgICAgIC51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICBmdWxsX25hbWU6IGZvcm1EYXRhLmZ1bGxOYW1lLFxuICAgICAgICAgICAgICAgICAgICBlbWFpbDogZm9ybURhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgICAgIG1vYmlsZTogZm9ybURhdGEubW9iaWxlLFxuICAgICAgICAgICAgICAgICAgICBwb3N0Y29kZTogZm9ybURhdGEucG9zdGNvZGUsXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBmb3JtRGF0YS5sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgYXBwb2ludG1lbnRfZGF0ZTogZm9ybURhdGEuZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgdGltZV9zbG90OiBmb3JtRGF0YS50aW1lU2xvdCxcbiAgICAgICAgICAgICAgICAgICAgaW5zdXJhbmNlX3Byb3ZpZGVyOiBmb3JtRGF0YS5pbnN1cmFuY2VQcm92aWRlcixcbiAgICAgICAgICAgICAgICAgICAgcG9saWN5X251bWJlcjogZm9ybURhdGEucG9saWN5TnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICBpbmNpZGVudF9kYXRlOiBmb3JtRGF0YS5pbmNpZGVudERhdGUsXG4gICAgICAgICAgICAgICAgICAgIHBvbGljeV9leGNlc3M6IGZvcm1EYXRhLnBvbGljeUV4Y2Vzc0Ftb3VudCxcbiAgICAgICAgICAgICAgICAgICAgcG9saWN5X2V4cGlyeTogZm9ybURhdGEucG9saWN5RXhwaXJ5RGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRfd2luZG93czogc2VsZWN0ZWRXaW5kb3dzICYmIHNlbGVjdGVkV2luZG93cy5sZW5ndGggPiAwID8gW3NlbGVjdGVkV2luZG93c10gOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB3aW5kb3dfZGFtYWdlOiB3aW5kb3dEYW1hZ2UgJiYgT2JqZWN0LmtleXMod2luZG93RGFtYWdlKS5sZW5ndGggPiAwID8gW3dpbmRvd0RhbWFnZV0gOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICB3aW5kb3dfc3BlYzogc3BlY2lmaWNhdGlvbnMgJiYgc3BlY2lmaWNhdGlvbnMubGVuZ3RoID4gMCA/IFtzcGVjaWZpY2F0aW9uc10gOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBwYXltZW50X29wdGlvbjogc3RhbmRhcmRpemVkUGF5bWVudE9wdGlvbixcbiAgICAgICAgICAgICAgICAgICAgZ2xhc3NfdHlwZTogZ2xhc3NUeXBlIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHF1b3RlX3ByaWNlOiBxdW90ZVByaWNlIHx8IGV4aXN0aW5nUmVjb3JkLnF1b3RlX3ByaWNlLFxuICAgICAgICAgICAgICAgICAgICBhZGFzX2NhbGlicmF0aW9uOiBhZGFzQ2FsaWJyYXRpb24gfHwgbnVsbFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmVxKCdxdW90ZV9pZCcsIHF1b3RlSWQpXG4gICAgICAgICAgICAgICAgLnNlbGVjdCgpXG4gICAgICAgICAgICAgICAgLnNpbmdsZSgpO1xuXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gZGF0YTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEluc2VydCBuZXcgcmVjb3JkXG4gICAgICAgICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgICAgICAgIC5mcm9tKCdNYXN0ZXJDdXN0b21lcicpXG4gICAgICAgICAgICAgICAgLmluc2VydChbe1xuICAgICAgICAgICAgICAgICAgICBxdW90ZV9pZDogcXVvdGVJZCxcbiAgICAgICAgICAgICAgICAgICAgdmVoaWNsZV9yZWc6IGZvcm1EYXRhLnZlaGljbGVSZWcgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgIGZ1bGxfbmFtZTogZm9ybURhdGEuZnVsbE5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiBmb3JtRGF0YS5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgbW9iaWxlOiBmb3JtRGF0YS5tb2JpbGUsXG4gICAgICAgICAgICAgICAgICAgIHBvc3Rjb2RlOiBmb3JtRGF0YS5wb3N0Y29kZSxcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IGZvcm1EYXRhLmxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgICBhcHBvaW50bWVudF9kYXRlOiBmb3JtRGF0YS5kYXRlLFxuICAgICAgICAgICAgICAgICAgICB0aW1lX3Nsb3Q6IGZvcm1EYXRhLnRpbWVTbG90LFxuICAgICAgICAgICAgICAgICAgICBpbnN1cmFuY2VfcHJvdmlkZXI6IGZvcm1EYXRhLmluc3VyYW5jZVByb3ZpZGVyLFxuICAgICAgICAgICAgICAgICAgICBwb2xpY3lfbnVtYmVyOiBmb3JtRGF0YS5wb2xpY3lOdW1iZXIsXG4gICAgICAgICAgICAgICAgICAgIGluY2lkZW50X2RhdGU6IGZvcm1EYXRhLmluY2lkZW50RGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgcG9saWN5X2V4Y2VzczogZm9ybURhdGEucG9saWN5RXhjZXNzQW1vdW50LFxuICAgICAgICAgICAgICAgICAgICBwb2xpY3lfZXhwaXJ5OiBmb3JtRGF0YS5wb2xpY3lFeHBpcnlEYXRlLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZF93aW5kb3dzOiBzZWxlY3RlZFdpbmRvd3MgJiYgc2VsZWN0ZWRXaW5kb3dzLmxlbmd0aCA+IDAgPyBbc2VsZWN0ZWRXaW5kb3dzXSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvd19kYW1hZ2U6IHdpbmRvd0RhbWFnZSAmJiBPYmplY3Qua2V5cyh3aW5kb3dEYW1hZ2UpLmxlbmd0aCA+IDAgPyBbd2luZG93RGFtYWdlXSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvd19zcGVjOiBzcGVjaWZpY2F0aW9ucyAmJiBzcGVjaWZpY2F0aW9ucy5sZW5ndGggPiAwID8gW3NwZWNpZmljYXRpb25zXSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHBheW1lbnRfb3B0aW9uOiBzdGFuZGFyZGl6ZWRQYXltZW50T3B0aW9uLFxuICAgICAgICAgICAgICAgICAgICBnbGFzc190eXBlOiBnbGFzc1R5cGUgfHwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgcXVvdGVfcHJpY2U6IHF1b3RlUHJpY2UsXG4gICAgICAgICAgICAgICAgICAgIGFkYXNfY2FsaWJyYXRpb246IGFkYXNDYWxpYnJhdGlvbiB8fCBudWxsXG4gICAgICAgICAgICAgICAgfV0pXG4gICAgICAgICAgICAgICAgLnNlbGVjdCgpXG4gICAgICAgICAgICAgICAgLnNpbmdsZSgpO1xuXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICAgICAgICAgICAgcmVzdWx0ID0gZGF0YTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRyYWNrIHF1b3RlIGNvbXBsZXRpb24gaW4gS2xhdml5b1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgS2xhdml5b1NlcnZpY2UudHJhY2tRdW90ZUNvbXBsZXRlZCh7XG4gICAgICAgICAgICAgICAgdmVoaWNsZVJlZzogZm9ybURhdGEudmVoaWNsZVJlZyB8fCByZXN1bHQudmVoaWNsZV9yZWcgfHwgJycsXG4gICAgICAgICAgICAgICAgdXNlckVtYWlsOiBmb3JtRGF0YS5lbWFpbCxcbiAgICAgICAgICAgICAgICB1c2VyTmFtZTogZm9ybURhdGEuZnVsbE5hbWUsXG4gICAgICAgICAgICAgICAgdXNlclBob25lOiBmb3JtRGF0YS5tb2JpbGUsXG4gICAgICAgICAgICAgICAgdXNlckxvY2F0aW9uOiBmb3JtRGF0YS5sb2NhdGlvbixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFdpbmRvd3M6IHNlbGVjdGVkV2luZG93cyB8fCBbXSxcbiAgICAgICAgICAgICAgICB3aW5kb3dEYW1hZ2U6IHdpbmRvd0RhbWFnZSB8fCB7fSxcbiAgICAgICAgICAgICAgICBzcGVjaWZpY2F0aW9uczogc3BlY2lmaWNhdGlvbnMgfHwgW10sXG4gICAgICAgICAgICAgICAgZ2xhc3NUeXBlOiBnbGFzc1R5cGUgfHwgJ09FRScsIC8vIFVzZSBhY3R1YWwgZ2xhc3MgdHlwZSBvciBkZWZhdWx0IHRvIE9FRVxuICAgICAgICAgICAgICAgIHF1b3RlUHJpY2U6IHF1b3RlUHJpY2UgfHwgcmVzdWx0LnF1b3RlX3ByaWNlIHx8IDAsXG4gICAgICAgICAgICAgICAgcXVvdGVJZDogcXVvdGVJZCxcbiAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGtsYXZpeW9FcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignS2xhdml5byB0cmFja2luZyBlcnJvcjonLCBrbGF2aXlvRXJyb3IpO1xuICAgICAgICAgICAgLy8gRG9uJ3QgZmFpbCB0aGUgbWFpbiByZXF1ZXN0IGlmIEtsYXZpeW8gZmFpbHNcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiAnQ29udGFjdCBpbmZvcm1hdGlvbiBzYXZlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgcmVjb3JkSWQ6IHJlc3VsdC5pZFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzYXZpbmcgY29udGFjdCBpbmZvOicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gc2F2ZSBjb250YWN0IGluZm9ybWF0aW9uJyxcbiAgICAgICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59Il0sIm5hbWVzIjpbInN1cGFiYXNlIiwiS2xhdml5b1NlcnZpY2UiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJmb3JtRGF0YSIsInF1b3RlSWQiLCJzZWxlY3RlZFdpbmRvd3MiLCJ3aW5kb3dEYW1hZ2UiLCJzcGVjaWZpY2F0aW9ucyIsInBheW1lbnRPcHRpb24iLCJnbGFzc1R5cGUiLCJxdW90ZVByaWNlIiwiYWRhc0NhbGlicmF0aW9uIiwiYm9keSIsInN0YW5kYXJkaXplZFBheW1lbnRPcHRpb24iLCJvcHRpb24iLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJleGlzdGluZ1JlY29yZCIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsInJlc3VsdCIsImVycm9yIiwidXBkYXRlIiwiZnVsbF9uYW1lIiwiZnVsbE5hbWUiLCJlbWFpbCIsIm1vYmlsZSIsInBvc3Rjb2RlIiwibG9jYXRpb24iLCJhcHBvaW50bWVudF9kYXRlIiwiZGF0ZSIsInRpbWVfc2xvdCIsInRpbWVTbG90IiwiaW5zdXJhbmNlX3Byb3ZpZGVyIiwiaW5zdXJhbmNlUHJvdmlkZXIiLCJwb2xpY3lfbnVtYmVyIiwicG9saWN5TnVtYmVyIiwiaW5jaWRlbnRfZGF0ZSIsImluY2lkZW50RGF0ZSIsInBvbGljeV9leGNlc3MiLCJwb2xpY3lFeGNlc3NBbW91bnQiLCJwb2xpY3lfZXhwaXJ5IiwicG9saWN5RXhwaXJ5RGF0ZSIsInNlbGVjdGVkX3dpbmRvd3MiLCJsZW5ndGgiLCJ3aW5kb3dfZGFtYWdlIiwiT2JqZWN0Iiwia2V5cyIsIndpbmRvd19zcGVjIiwicGF5bWVudF9vcHRpb24iLCJnbGFzc190eXBlIiwicXVvdGVfcHJpY2UiLCJhZGFzX2NhbGlicmF0aW9uIiwiaW5zZXJ0IiwicXVvdGVfaWQiLCJ2ZWhpY2xlX3JlZyIsInZlaGljbGVSZWciLCJ0cmFja1F1b3RlQ29tcGxldGVkIiwidXNlckVtYWlsIiwidXNlck5hbWUiLCJ1c2VyUGhvbmUiLCJ1c2VyTG9jYXRpb24iLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJrbGF2aXlvRXJyb3IiLCJyZWNvcmRJZCIsImlkIiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/submit-contact-info.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubmit-contact-info&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsubmit-contact-info.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();