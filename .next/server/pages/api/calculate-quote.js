"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/calculate-quote";
exports.ids = ["pages/api/calculate-quote"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-quote&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-quote.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-quote&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-quote.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_calculate_quote_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/calculate-quote.ts */ \"(api)/./pages/api/calculate-quote.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_calculate_quote_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_calculate_quote_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/calculate-quote\",\n        pathname: \"/api/calculate-quote\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_calculate_quote_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNhbGN1bGF0ZS1xdW90ZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGY2FsY3VsYXRlLXF1b3RlLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzJEO0FBQzNEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywwREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMERBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvY2FsY3VsYXRlLXF1b3RlLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jYWxjdWxhdGUtcXVvdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jYWxjdWxhdGUtcXVvdGVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-quote&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-quote.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/supabaseClient.ts":
/*!*******************************!*\
  !*** ./lib/supabaseClient.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\nif (false) {}\nif (false) {}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://julpwjxzrlkbxdbphrdy.supabase.co\" || 0, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp1bHB3anh6cmxrYnhkYnBocmR5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc0MTQ4NDUsImV4cCI6MjA1Mjk5MDg0NX0.rynZAq6bjPlpfyTaxHYcs8FdVdTo_gy95lazi2Kt5RY\" || 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvc3VwYWJhc2VDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBRXBELElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUVELElBQUksS0FBMEMsRUFBRSxFQUUvQztBQUVNLE1BQU1PLFdBQVdQLG1FQUFZQSxDQUNsQ0MsMENBQW9DLElBQUksQ0FBRSxFQUMxQ0Esa05BQXlDLElBQUksQ0FBRSxFQUNoRCIsInNvdXJjZXMiOlsiL1VzZXJzL211aGFtbWFkYWxpL0Rlc2t0b3AvV2luZHNjcmVlbkNvbXBhcmUvd2luZHNoaWVsZF9jb21wYXJlL1dpbmRDb21wYXJlL2xpYi9zdXBhYmFzZUNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmlmICghcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ01pc3NpbmcgTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMJylcbn1cblxuaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSkge1xuICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIE5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJylcbn1cblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJycsXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIHx8ICcnXG4pICJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiY29uc29sZSIsImVycm9yIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/supabaseClient.ts\n");

/***/ }),

/***/ "(api)/./pages/api/calculate-quote.ts":
/*!**************************************!*\
  !*** ./pages/api/calculate-quote.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/supabaseClient */ \"(api)/./lib/supabaseClient.ts\");\n\n// Fetch vehicle valuation data\nasync function fetchVehicleValuation(registration) {\n    try {\n        const apiKey = process.env.UK_VEHICLE_DATA_API_KEY;\n        if (!apiKey) {\n            console.error('UK_VEHICLE_DATA_API_KEY environment variable is not set');\n            return null;\n        }\n        console.log(`Fetching valuation data for registration: ${registration}`);\n        const response = await fetch(`https://uk1.ukvehicledata.co.uk/api/datapackage/ValuationData?v=2&api_nullitems=1&auth_apikey=${apiKey}&key_VRM=${registration}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        console.log('Full Valuation API response:', JSON.stringify(data, null, 2));\n        if (data.Response?.StatusCode === \"Success\") {\n            console.log('API call successful, checking for valuation data...');\n            // Check the correct path for valuation data\n            const dataItems = data.Response.DataItems;\n            if (dataItems && dataItems.ValuationList) {\n                console.log('ValuationList found:', JSON.stringify(dataItems.ValuationList, null, 2));\n                const otrValue = dataItems.ValuationList.OTR;\n                if (otrValue) {\n                    console.log(`OTR value found: £${otrValue}`);\n                    return parseFloat(otrValue);\n                } else {\n                    console.log('OTR value not found in ValuationList');\n                    console.log('Available fields in ValuationList:', Object.keys(dataItems.ValuationList));\n                }\n            } else {\n                console.log('ValuationList not found in DataItems');\n                console.log('Available DataItems fields:', dataItems ? Object.keys(dataItems) : 'None');\n            }\n        } else {\n            console.log(`API call failed with status: ${data.Response?.StatusCode}`);\n            console.log(`Status message: ${data.Response?.StatusMessage}`);\n        }\n        return null;\n    } catch (error) {\n        console.error('Error fetching vehicle valuation:', error);\n        return null;\n    }\n}\n// Calculate materials cost based on OTR price and window type\n// Example: For OTR price £20,000 with Windscreen + Front Driver Door + Rear Window + Rear Driver Door + Rear Passenger Door + Front Passenger Door:\n// - Windscreen: 1.2% × £20,000 = £240\n// - Front Driver Door: 0.25% × £20,000 = £50  \n// - Rear Window: 0.5% × £20,000 = £100\n// - Rear Driver Door: 0.25% × £20,000 = £50\n// - Rear Passenger Door: 0.25% × £20,000 = £50\n// - Front Passenger Door: 0.25% × £20,000 = £50\n// Total: £540 (+ £30 per window if tinted)\nfunction calculateMaterialsCost(otrPrice, selectedWindows, glassColor) {\n    if (!otrPrice || isNaN(otrPrice)) {\n        console.log('OTR price not available, using minimum materials cost of £70');\n        return 70;\n    }\n    // Window type percentage multipliers based on OTR price\n    const windowOTRPercentages = {\n        'jqvmap1_ws': 0.012,\n        'jqvmap1_rw': 0.005,\n        'jqvmap1_df': 0.0025,\n        'jqvmap1_dg': 0.0025,\n        'jqvmap1_dr': 0.0025,\n        'jqvmap1_dd': 0.0025,\n        'jqvmap1_vp': 0.005,\n        'jqvmap1_vf': 0.005,\n        'jqvmap1_vr': 0.005,\n        'jqvmap1_vg': 0.005,\n        'jqvmap1_qr': 0.004,\n        'jqvmap1_qg': 0.004 // Rear Driver Quarter - 0.4% (quarter)\n    };\n    let totalMaterialsCost = 0;\n    if (selectedWindows && Array.isArray(selectedWindows)) {\n        for (const windowId of selectedWindows){\n            const percentage = windowOTRPercentages[windowId];\n            if (percentage) {\n                const windowCost = otrPrice * percentage;\n                totalMaterialsCost += windowCost;\n                // Check for privacy/tinting and add £30 if applicable\n                let privacyCost = 0;\n                if (glassColor && glassColor[windowId] === 'Tinted Black') {\n                    privacyCost = 30;\n                    totalMaterialsCost += privacyCost;\n                }\n                const privacyNote = privacyCost > 0 ? ` + £${privacyCost} (privacy)` : '';\n                console.log(`Window ${windowId}: ${percentage * 100}% of £${otrPrice} = £${windowCost.toFixed(2)}${privacyNote} = £${(windowCost + privacyCost).toFixed(2)}`);\n            } else {\n                console.log(`Unknown window type: ${windowId}, using default 0.25% of OTR`);\n                const windowCost = otrPrice * 0.0025; // Default 0.25%\n                totalMaterialsCost += windowCost;\n                // Check for privacy/tinting and add £30 if applicable\n                let privacyCost = 0;\n                if (glassColor && glassColor[windowId] === 'Tinted Black') {\n                    privacyCost = 30;\n                    totalMaterialsCost += privacyCost;\n                }\n                const privacyNote = privacyCost > 0 ? ` + £${privacyCost} (privacy)` : '';\n                console.log(`Window ${windowId} (unknown): 0.25% of £${otrPrice} = £${windowCost.toFixed(2)}${privacyNote} = £${(windowCost + privacyCost).toFixed(2)}`);\n            }\n        }\n    }\n    // Ensure minimum materials cost is £70\n    const finalCost = Math.max(totalMaterialsCost, 70);\n    console.log(`Total materials cost: £${totalMaterialsCost.toFixed(2)}, Final cost (min £70): £${finalCost.toFixed(2)}`);\n    return Math.round(finalCost * 100) / 100; // Round to 2 decimal places\n}\n// Pricing constants for modifiers and add-ons\nconst GLASS_PRICING = {\n    // Window type multipliers (relative to base quote price)\n    windows: {\n        'jqvmap1_ws': {\n            multiplier: 1.0,\n            name: 'Windscreen'\n        },\n        'jqvmap1_rw': {\n            multiplier: 0.8,\n            name: 'Rear Window'\n        },\n        'jqvmap1_df': {\n            multiplier: 0.5,\n            name: 'Front Passenger Door'\n        },\n        'jqvmap1_dg': {\n            multiplier: 0.5,\n            name: 'Front Driver Door'\n        },\n        'jqvmap1_dr': {\n            multiplier: 0.45,\n            name: 'Rear Passenger Door'\n        },\n        'jqvmap1_dd': {\n            multiplier: 0.45,\n            name: 'Rear Driver Door'\n        },\n        'jqvmap1_vp': {\n            multiplier: 0.25,\n            name: 'Front Passenger Vent'\n        },\n        'jqvmap1_vf': {\n            multiplier: 0.25,\n            name: 'Front Driver Vent'\n        },\n        'jqvmap1_vr': {\n            multiplier: 0.2,\n            name: 'Rear Passenger Vent'\n        },\n        'jqvmap1_vg': {\n            multiplier: 0.2,\n            name: 'Rear Driver Vent'\n        },\n        'jqvmap1_qr': {\n            multiplier: 0.3,\n            name: 'Rear Passenger Quarter'\n        },\n        'jqvmap1_qg': {\n            multiplier: 0.3,\n            name: 'Rear Driver Quarter'\n        }\n    },\n    // Note: Damage type multipliers are now handled within calculateMaterialsCost function\n    // Specification add-ons (flat fees)\n    specifications: {\n        'Rain Sensor': 25,\n        'Sensor': 25,\n        'Heated': 35,\n        'Camera': 50,\n        'Heads Up Display': 75,\n        'HUD': 75,\n        'Aerial Antenna': 15,\n        'No Modification': 0,\n        'Not Sure?': 10 // Small buffer for unknown specs\n    },\n    // Glass type multipliers\n    glassTypes: {\n        'OEM': 1.4,\n        'OEE': 1.0,\n        'standard': 1.0\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    try {\n        const { vehicleDetails, windowSpecifications, selectedWindows, windowDamage, deliveryType, glassType, glassColor } = req.body;\n        const quoteId = req.body.quoteId || `WC${Date.now()}${Math.random().toString(36).substr(2, 5).toUpperCase()}`;\n        if (!vehicleDetails?.registration) {\n            return res.status(400).json({\n                message: 'Vehicle registration is required'\n            });\n        }\n        console.log('Calculating quote with data:', {\n            selectedWindows,\n            windowDamage,\n            windowSpecifications,\n            glassType,\n            deliveryType,\n            glassColor,\n            registration: vehicleDetails.registration\n        });\n        // Fetch vehicle valuation data\n        const otrValue = await fetchVehicleValuation(vehicleDetails.registration);\n        // NEW PRICING STRUCTURE\n        // Fixed labour cost\n        const labourCost = 140;\n        // Calculate materials cost based on OTR price and window types\n        let materialsCost = calculateMaterialsCost(otrValue, selectedWindows, glassColor);\n        // Apply specification costs to materials\n        let specificationsCost = 0;\n        if (windowSpecifications && Array.isArray(windowSpecifications)) {\n            specificationsCost = windowSpecifications.reduce((total, spec)=>{\n                const specCost = spec in GLASS_PRICING.specifications ? GLASS_PRICING.specifications[spec] : 0;\n                return total + specCost;\n            }, 0);\n        }\n        materialsCost += specificationsCost;\n        // Apply glass type multiplier to materials\n        const glassMultiplier = glassType && glassType in GLASS_PRICING.glassTypes ? GLASS_PRICING.glassTypes[glassType] : 1.0;\n        materialsCost *= glassMultiplier;\n        // Calculate subtotal (labour + materials)\n        const subtotal = labourCost + materialsCost;\n        // Add 20% service fee on labour + materials\n        const serviceFee = subtotal * 0.2;\n        const totalBeforeVAT = subtotal + serviceFee;\n        // Add 20% VAT on the total\n        const vat = totalBeforeVAT * 0.2;\n        let totalPrice = totalBeforeVAT + vat;\n        // Apply delivery type fee\n        if (deliveryType === 'express') {\n            totalPrice += 90; // £90 additional for express delivery\n        }\n        // Round to nearest pound\n        totalPrice = Math.round(totalPrice);\n        // Ensure minimum total price is still £70\n        totalPrice = Math.max(totalPrice, 70);\n        // Create detailed breakdown for transparency\n        const breakdown = {\n            windowCosts: [],\n            specificationCosts: specificationsCost,\n            serviceFee: Math.round(serviceFee * 100) / 100,\n            glassTypeMultiplier: glassMultiplier,\n            baseTotal: Math.round(subtotal * 100) / 100,\n            vehicleBasedPrice: calculateMaterialsCost(otrValue, selectedWindows, glassColor),\n            otrPrice: otrValue\n        };\n        // Add detailed breakdown info for debugging\n        console.log('Price Breakdown:', {\n            labourCost,\n            materialsCost: Math.round(materialsCost * 100) / 100,\n            subtotal: Math.round(subtotal * 100) / 100,\n            serviceFee: Math.round(serviceFee * 100) / 100,\n            totalBeforeVAT: Math.round(totalBeforeVAT * 100) / 100,\n            vat: Math.round(vat * 100) / 100,\n            finalPrice: totalPrice,\n            glassType,\n            deliveryType\n        });\n        try {\n            // First, try to update the existing record in Supabase\n            const { data: updateData, error: updateError } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('MasterCustomer').update({\n                quote_price: totalPrice,\n                service_type: deliveryType,\n                glass_type: glassType,\n                otr_price: otrValue\n            }).eq('quote_id', quoteId).select();\n            if (updateError || !updateData || updateData.length === 0) {\n                console.log('Update failed or no record found, attempting upsert...');\n                // If update fails or no record exists, create a new record\n                const { data: insertData, error: insertError } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('MasterCustomer').insert({\n                    quote_id: quoteId,\n                    quote_price: totalPrice,\n                    service_type: deliveryType,\n                    glass_type: glassType,\n                    otr_price: otrValue,\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                }).select();\n                if (insertError) {\n                    console.error('Supabase insert error:', insertError);\n                } else {\n                    console.log('Successfully created new quote record with price:', totalPrice);\n                }\n            } else {\n                console.log('Successfully updated quote price in Supabase:', totalPrice);\n            }\n        } catch (supabaseError) {\n            console.error('Supabase error:', supabaseError);\n        // Continue execution even if Supabase operation fails\n        }\n        return res.status(200).json({\n            success: true,\n            price: totalPrice,\n            quoteId,\n            breakdown: {\n                ...breakdown,\n                // Add detailed breakdown for frontend display\n                labourCost: labourCost,\n                materialsCost: Math.round(materialsCost * 100) / 100,\n                subtotal: Math.round(subtotal * 100) / 100,\n                serviceFee: Math.round(serviceFee * 100) / 100,\n                totalBeforeVAT: Math.round(totalBeforeVAT * 100) / 100,\n                vat: Math.round(vat * 100) / 100,\n                finalPrice: totalPrice,\n                glassType: glassType,\n                deliveryType: deliveryType\n            }\n        });\n    } catch (error) {\n        console.error('Error calculating quote:', error);\n        return res.status(500).json({\n            message: 'Failed to calculate quote'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/calculate-quote.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-quote&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-quote.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();